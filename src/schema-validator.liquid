---
pagination:
    data: schemas
    size: 1
    alias: schema
permalink: "/{{ schema.name }}/index.mjs"
---
import schema from './schema.json' with { type: 'json' };

const registry = {};

for ( const prop of schema.property ) {
    console.log( `processing`, prop)
    if ( !registry.hasOwnProperty( prop.type ) ) {
        try {
            const module = await import( `${ prop.type }/index.mjs` );
            console.log( module )
        } catch ( error ) {
            console.error("Error loading schema: ", prop.type, error);
        }
    }
    registry[prop.type].push( prop.name );
}

console.log( registry );

function validateType( value, type ) {
    console.log( "need to validate type:", type );
}

export function validator( data ) {
    if ( !data || typeof data !== 'object' ) {
        return false;
    }

    for ( const property of schema.property ) {
        if ( !data.hasOwnProperty( property.name ) ) {
            if ( property.cardinality === '1' || property.cardinality === '1..n' ) {
                return false; // Required property is missing
            }
        }

        const value = data[property.name];
        if ( !validateType( value, property.type ) ) {
            return false;
        }
    }
}